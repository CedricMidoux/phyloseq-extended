% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_frogs.R
\name{import_frogs}
\alias{import_frogs}
\title{Import function to read FROGS format OTU table}
\usage{
import_frogs(biom, treefilename = NULL, refseqfilename = NULL,
  refseqFunction = readDNAStringSet, refseqArgs = NULL,
  taxMethod = c("blast", "rdp"), parallel = TRUE, ...)
}
\arguments{
\item{biom}{A character string indicating the file location of the BIOM formatted file. This is a JSON formatted file, specific to biological datasets, as described in http://www.qiime.org/svn_documentation/documentation/biom_format.htmlthe biom-format home page.}

\item{treefilename}{Default value is NULL. A file representing a phylogenetic tree or a phylo object. Files can be NEXUS or Newick format.}

\item{refseqfilename}{Default NULL. The file path of the biological sequence file that contains at a minimum a sequence for each OTU in the dataset. Alternatively, you may provide an already-imported XStringSet object that satisfies this condition. In either case, the names of each OTU need to match exactly the taxa_names of the other components of your data.}

\item{refseqFunction}{Default is readDNAStringSet, which expects to read a fasta-formatted DNA sequence file. If your reference sequences for each OTU are amino acid, RNA, or something else, then you will need to specify a different function here. This is the function used to read the file connection provided as the the previous argument, refseqfilename. This argument is ignored if refseqfilename is already a XStringSet class.}

\item{refseqArgs}{Default NULL. Additional arguments to refseqFunction. See XStringSet-io for details about additional arguments to the standard read functions in the Biostrings package.}

\item{taxMethod}{Default "blast". Either blast or RDP, the method used for taxonomy affiliation.}

\item{parallel}{Logical. Wrapper option for .parallel parameter in plyr-package functions. If TRUE, apply parsing functions in parallel, using parallel backend provided by foreach and its supporting backend packages. One caveat, plyr-parallelization currently works most-cleanly with multicore-like backends (Mac OS X, Unix?), and may throw warnings for SNOW-like backends. See the example below for code invoking multicore-style backend within the doParallel package.}

\item{...}{Additional parameters passed on to read_tree.}
}
\value{
A phyloseq class object
}
\description{
Import function to read FROGS format OTU table
}
